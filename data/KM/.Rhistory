# TRUE, then display a message that the previous value was invalid.
dataModal <- function(failed = FALSE) {
modalDialog(
textInput("dataset", "Choose data set",
placeholder = 'Try "mtcars" or "abc"'
),
span('(Try the name of a valid data object like "mtcars", ',
'then a name of a non-existent object like "abc")'),
if (failed)
div(tags$b("Invalid name of data object", style = "color: red;")),
footer = tagList(
modalButton("Cancel"),
actionButton("ok", "OK")
)
)
}
# Show modal when button is clicked.
observeEvent(input$show, {
showModal(dataModal())
})
# When OK button is pressed, attempt to load the data set. If successful,
# remove the modal. If not show another modal, but this time with a failure
# message.
observeEvent(input$ok, {
# Check that data object exists and is data frame.
if (!is.null(input$dataset) && nzchar(input$dataset) &&
exists(input$dataset) && is.data.frame(get(input$dataset))) {
vals$data <- get(input$dataset)
removeModal()
} else {
showModal(dataModal(failed = TRUE))
}
})
# Display information about selected data
output$dataInfo <- renderPrint({
if (is.null(vals$data))
"No data selected"
else
summary(vals$data)
})
}
)
}
?switchInput
??switchInput
?switchInput
??switchInput
runApp('~/JS_data/source_tree/project_code/seer/ESCC_project')
library(shinyWidgets)
install.packages(shinyWidgets)
install.packages('shinyWidgets')
runApp('~/JS_data/source_tree/project_code/seer/ESCC_project')
runApp('~/JS_data/source_tree/project_code/seer/ESCC_project')
runApp('~/JS_data/source_tree/project_code/seer/ESCC_project')
runApp('~/JS_data/source_tree/project_code/seer/ESCC_project')
runApp('~/JS_data/source_tree/project_code/seer/ESCC_project')
?switchInput
runApp('~/JS_data/source_tree/project_code/seer/ESCC_project')
runApp('~/JS_data/source_tree/project_code/seer/ESCC_project')
runApp('~/JS_data/source_tree/project_code/seer/ESCC_project')
runApp('~/JS_data/source_tree/project_code/seer/ESCC_project')
runApp('~/JS_data/source_tree/project_code/seer/ESCC_project')
rt_os <- read.table(file = '/Users/stead/JS_data/level3_data/SEER/ESCC/OS/OS.txt', header = TRUE, sep = '\t', stringsAsFactors = FALSE)
setwd('/Users/stead/JS_data/source_tree/project_code/seer/ESCC_project/data/KM')
colnames(rt_os)
rt_os_sort <- rt_os[, -c("Patient_ID", "Year", 'Age', 'Survival_status', 'tumor_size', 'Regional_nodes_positive')]
rt_os_sort <- rt_os[, -c(which(colnames(rt_os) == 'tumor_size'),
which(colnames(rt_os) == 'Age'), which(colnames(rt_os) == 'Patient_ID'),
which(colnames(rt_os) == 'Year'), which(colnames(rt_os) == 'Survival_status'),
which(colnames(rt_os) == 'Regional_nodes_positive'))]
saveRDS(rt_os_sort, file = 'OS_data.rds')
getwd()
CF
OS_Sublist[1]
runApp('~/JS_data/source_tree/project_code/seer/ESCC_project')
OS_Sublist <- list('all',
'Sex' = list('Female', 'Male'),
'CSS' = list('Yes', 'No'),
'Stage' = list("IA", "IB", "IIA", "IIB",  "IIIA", "IIIB", "IIIC",  "IIINOS", "IV", "Unknown"))
OS_Sublist[1]
OS_Sublist[[1]]
runApp('~/JS_data/source_tree/project_code/seer/ESCC_project')
rt_os_sort$Sex
unique(rt_os_sort$Sex)
unique(rt_os_sort$State)
list(unique(rt_os_sort$State))
list(unique(rt_os_sort$State))list('Female', 'Male')
list('Female', 'Male')
list("IA", "IB", "IIA", "IIB",  "IIIA", "IIIB", "IIIC",  "IIINOS", "IV", "Unknown")
list(unique(rt_os_sort$State))list('Female', 'Male')
list(unique(rt_os_sort$State))
list(c(unique(rt_os_sort$State)))
unique(rt_os_sort$State)
c(unique(rt_os_sort$State))
split(unique(rt_os_sort$State))
strsplit(unique(rt_os_sort$State))
strsplit(unique(rt_os_sort$State), ' ')
strsplit(unique(rt_os_sort$State), ' ')
is.list(strsplit(unique(rt_os_sort$State), ' '))
lapply(colna, function)
colnames(data_ratio)
grp_a_list
rt_ratio
colnames(rt_os_sort)
runApp('~/JS_data/source_tree/project_code/seer/ESCC_project')
var_list
colnames(rt_os_sort)
runApp('~/JS_data/source_tree/project_code/seer/ESCC_project')
colnames(rt_os_sort)
colnames(rt_os_sort)[1]
colnames(rt_os_sort)[1]
runApp('~/JS_data/source_tree/project_code/seer/ESCC_project')
var_list <- colnames(rt_os_sort)[1]
lapply(var_list, function(x){strsplit(unique(rt_os_sort[, x]), ' ')})
GetSubOSList <- function(var_a, rt_os){
var_list <- strsplit(unique(rt_os[, var_a]), ' ')
var_out <- list(var_a = var_list)
}
GetSubOSList('Sex', rt_os_sort)
var_a <- 'Sex'
rt_os <- rt_os_sort
var_list <- strsplit(unique(rt_os[, var_a]), ' ')
var_list
list(var_a = var_list)
runApp('~/JS_data/source_tree/project_code/seer/ESCC_project')
namlist_sex <- list('Female', 'Male')
names(list_sex) <- 'Sex'
list_sex <- list('Female', 'Male')
names(list_sex) <- 'Sex'
list_sex
list('Female', 'Male')
list('Female', 'Male')
list_sex
names(list_sex)
names(list_sex) <- c('sex',  'sex')
runApp('~/JS_data/source_tree/project_code/seer/ESCC_project')
runApp('~/JS_data/source_tree/project_code/seer/ESCC_project')
runApp('~/JS_data/source_tree/project_code/seer/ESCC_project')
runApp('~/JS_data/source_tree/project_code/seer/ESCC_project')
CF[1]
OS_Sublist[[1]]
runApp('~/JS_data/source_tree/project_code/seer/ESCC_project')
colnames(data_sur_os)
data_sur_os$Sex
unique(data_sur_os$Sex)
runApp('~/JS_data/source_tree/project_code/seer/ESCC_project')
strsplit(unique(rt_os[, var_a]), ' ')
colnames(rt_os_sort)
OS_Sublist <- list('all',
'Sex' = strsplit(unique(rt_os_sort[, "Sex"]), ' '),
'State' = strsplit(unique(rt_os_sort[, "State"]), ' '),
'Primary_Site' = strsplit(unique(rt_os_sort[, "Primary_Site"]), ' '),
'Grade' = strsplit(unique(rt_os_sort[, "Grade"]), ' '),
'Histologic_type' = strsplit(unique(rt_os_sort[, "Histologic_type"]), ' '),
'Stage' = strsplit(unique(rt_os_sort[, "Stage"]), ' '),
'T' = strsplit(unique(rt_os_sort[, "T"]), ' '),
'N' = strsplit(unique(rt_os_sort[, "N"]), ' '),
'M' = strsplit(unique(rt_os_sort[, "M"]), ' '),
'Surgery_of_Primary_Site' = strsplit(unique(rt_os_sort[, "Surgery_of_Primary_Site"]), ' '),
'Surgery_of_Primary_Site_add' = strsplit(unique(rt_os_sort[, "Surgery_of_Primary_Site_add"]), ' '),
'Surgery_of_Other_Site' = strsplit(unique(rt_os_sort[, "Surgery_of_Other_Site"]), ' '),
'Radiation_sequence_with_surgery' = strsplit(unique(rt_os_sort[, "Radiation_sequence_with_surgery"]), ' '),
'Radiation_recode' = strsplit(unique(rt_os_sort[, "Radiation_recode"]), ' '),
'Chemotherapy' = strsplit(unique(rt_os_sort[, "Chemotherapy"]), ' '),
'Regional_nodes_positive_cat' = strsplit(unique(rt_os_sort[, "Regional_nodes_positive_cat"]), ' '),
'mets_bone' = strsplit(unique(rt_os_sort[, "mets_bone"]), ' '),
'mets_brain' = strsplit(unique(rt_os_sort[, "mets_brain"]), ' '),
'mets_liver' = strsplit(unique(rt_os_sort[, "mets_liver"]), ' '),
'mets_lung' = strsplit(unique(rt_os_sort[, "mets_lung"]), ' '),
'mets_Distant_LN' = strsplit(unique(rt_os_sort[, "mets_Distant_LN"]), ' '),
'mets_DX_Other' = strsplit(unique(rt_os_sort[, "mets_DX_Other"]), ' '),
'tumor_size_cat' = strsplit(unique(rt_os_sort[, "tumor_size_cat"]), ' '),
'lymph_nodes_involvement' = strsplit(unique(rt_os_sort[, "lymph_nodes_involvement"]), ' '),
'distant_metastasis' = strsplit(unique(rt_os_sort[, "distant_metastasis"]), ' '),
'lymph_nodes_involvement_clinically' = strsplit(unique(rt_os_sort[, "lymph_nodes_involvement_clinically"]), ' '),
'Race' = strsplit(unique(rt_os_sort[, "Race"]), ' '),
'Age_cat' = strsplit(unique(rt_os_sort[, "Age_cat"]), ' '),
'Insurance' = strsplit(unique(rt_os_sort[, "Insurance"]), ' '),
'Marital_status' = strsplit(unique(rt_os_sort[, "Marital_status"]), ' '))
OS_Sublist
saveRDS(OS_Sublist, file = 'OS_Sublist.rds')
runApp('~/JS_data/source_tree/project_code/seer/ESCC_project')
OS_Sublist <- readRDS('./data/KM/OS_Sublist.rds')
getwd
getwd()
readRDS('./data/KM/OS_Sublist.rds')
OS_Sublist <- readRDS('/Users/stead/JS_data/source_tree/project_code/seer/ESCC_project/data/KM/OS_Sublist.rds')
OS_Sublist
runApp('~/JS_data/source_tree/project_code/seer/ESCC_project')
OS_Sublist
'Sex' = strsplit(unique(rt_os_sort[, "Sex"]), ' ')
OS_Sublist <- list('all',
'Sex' = strsplit(unique(rt_os_sort[, "Sex"]), ' '),
'State' = strsplit(unique(rt_os_sort[, "State"]), ' '),
'Primary_Site' = strsplit(unique(rt_os_sort[, "Primary_Site"]), ' '),
'Grade' = strsplit(unique(rt_os_sort[, "Grade"]), ' '),
'Histologic_type' = strsplit(unique(rt_os_sort[, "Histologic_type"]), ' '),
'Stage' = strsplit(unique(rt_os_sort[, "Stage"]), ' '),
'T' = strsplit(unique(rt_os_sort[, "T"]), ' '),
'N' = strsplit(unique(rt_os_sort[, "N"]), ' '),
'M' = strsplit(unique(rt_os_sort[, "M"]), ' '),
'Surgery_of_Primary_Site' = strsplit(unique(rt_os_sort[, "Surgery_of_Primary_Site"]), ' '),
'Surgery_of_Primary_Site_add' = strsplit(unique(rt_os_sort[, "Surgery_of_Primary_Site_add"]), ' '),
'Surgery_of_Other_Site' = strsplit(unique(rt_os_sort[, "Surgery_of_Other_Site"]), ' '),
'Radiation_sequence_with_surgery' = strsplit(unique(rt_os_sort[, "Radiation_sequence_with_surgery"]), ' '),
'Radiation_recode' = strsplit(unique(rt_os_sort[, "Radiation_recode"]), ' '),
'Chemotherapy' = strsplit(unique(rt_os_sort[, "Chemotherapy"]), ' '),
'Regional_nodes_positive_cat' = strsplit(unique(rt_os_sort[, "Regional_nodes_positive_cat"]), ' '),
'mets_bone' = strsplit(unique(rt_os_sort[, "mets_bone"]), ' '),
'mets_brain' = strsplit(unique(rt_os_sort[, "mets_brain"]), ' '),
'mets_liver' = strsplit(unique(rt_os_sort[, "mets_liver"]), ' '),
'mets_lung' = strsplit(unique(rt_os_sort[, "mets_lung"]), ' '),
'mets_Distant_LN' = strsplit(unique(rt_os_sort[, "mets_Distant_LN"]), ' '),
'mets_DX_Other' = strsplit(unique(rt_os_sort[, "mets_DX_Other"]), ' '),
'tumor_size_cat' = strsplit(unique(rt_os_sort[, "tumor_size_cat"]), ' '),
'lymph_nodes_involvement' = strsplit(unique(rt_os_sort[, "lymph_nodes_involvement"]), ' '),
'distant_metastasis' = strsplit(unique(rt_os_sort[, "distant_metastasis"]), ' '),
'lymph_nodes_involvement_clinically' = strsplit(unique(rt_os_sort[, "lymph_nodes_involvement_clinically"]), ' '),
'Race' = strsplit(unique(rt_os_sort[, "Race"]), ' '),
'Age_cat' = strsplit(unique(rt_os_sort[, "Age_cat"]), ' '),
'Insurance' = strsplit(unique(rt_os_sort[, "Insurance"]), ' '),
'Marital_status' = strsplit(unique(rt_os_sort[, "Marital_status"]), ' '))
OS_Sublist
strsplit(unique(rt_os_sort[, "Sex"]), ' ')
list('all',
'Sex' = strsplit(unique(rt_os_sort[, "Sex"]), ' '),
'State' = strsplit(unique(rt_os_sort[, "State"]), ' '),
'Primary_Site' = strsplit(unique(rt_os_sort[, "Primary_Site"]), ' '),
'Grade' = strsplit(unique(rt_os_sort[, "Grade"]), ' '),
'Histologic_type' = strsplit(unique(rt_os_sort[, "Histologic_type"]), ' '),
'Stage' = strsplit(unique(rt_os_sort[, "Stage"]), ' '),
'T' = strsplit(unique(rt_os_sort[, "T"]), ' '),
'N' = strsplit(unique(rt_os_sort[, "N"]), ' '),
'M' = strsplit(unique(rt_os_sort[, "M"]), ' '),
'Surgery_of_Primary_Site' = strsplit(unique(rt_os_sort[, "Surgery_of_Primary_Site"]), ' '),
'Surgery_of_Primary_Site_add' = strsplit(unique(rt_os_sort[, "Surgery_of_Primary_Site_add"]), ' '),
'Surgery_of_Other_Site' = strsplit(unique(rt_os_sort[, "Surgery_of_Other_Site"]), ' '),
'Radiation_sequence_with_surgery' = strsplit(unique(rt_os_sort[, "Radiation_sequence_with_surgery"]), ' '),
'Radiation_recode' = strsplit(unique(rt_os_sort[, "Radiation_recode"]), ' '),
'Chemotherapy' = strsplit(unique(rt_os_sort[, "Chemotherapy"]), ' '),
'Regional_nodes_positive_cat' = strsplit(unique(rt_os_sort[, "Regional_nodes_positive_cat"]), ' '),
'mets_bone' = strsplit(unique(rt_os_sort[, "mets_bone"]), ' '),
'mets_brain' = strsplit(unique(rt_os_sort[, "mets_brain"]), ' '),
'mets_liver' = strsplit(unique(rt_os_sort[, "mets_liver"]), ' '),
'mets_lung' = strsplit(unique(rt_os_sort[, "mets_lung"]), ' '),
'mets_Distant_LN' = strsplit(unique(rt_os_sort[, "mets_Distant_LN"]), ' '),
'mets_DX_Other' = strsplit(unique(rt_os_sort[, "mets_DX_Other"]), ' '),
'tumor_size_cat' = strsplit(unique(rt_os_sort[, "tumor_size_cat"]), ' '),
'lymph_nodes_involvement' = strsplit(unique(rt_os_sort[, "lymph_nodes_involvement"]), ' '),
'distant_metastasis' = strsplit(unique(rt_os_sort[, "distant_metastasis"]), ' '),
'lymph_nodes_involvement_clinically' = strsplit(unique(rt_os_sort[, "lymph_nodes_involvement_clinically"]), ' '),
'Race' = strsplit(unique(rt_os_sort[, "Race"]), ' '),
'Age_cat' = strsplit(unique(rt_os_sort[, "Age_cat"]), ' '),
'Insurance' = strsplit(unique(rt_os_sort[, "Insurance"]), ' '),
'Marital_status' = strsplit(unique(rt_os_sort[, "Marital_status"]), ' '))
runApp('~/JS_data/source_tree/project_code/seer/ESCC_project')
strsplit(unique(rt_os_sort[, "Sex"]), ' ')
list(strsplit(unique(rt_os_sort[, "Sex"]), ' ')
)
list('all',
'Sex' = strsplit(unique(rt_os_sort[, "Sex"]), ' '))
list('all',
'Sex' = list('Female', 'Male'),
'CSS' = list('Yes', 'No'),
'Stage' = list("IA", "IB", "IIA", "IIB",  "IIIA", "IIIB", "IIIC",  "IIINOS", "IV", "Unknown"))
runApp('~/JS_data/source_tree/project_code/seer/ESCC_project')
list('all',
'Sex' = strsplit(unique(rt_os_sort[, "Sex"]), ' '),
'State' = strsplit(unique(rt_os_sort[, "State"]), ' '),
'Primary_Site' = strsplit(unique(rt_os_sort[, "Primary_Site"]), ' '),
'Grade' = strsplit(unique(rt_os_sort[, "Grade"]), ' '),
'Histologic_type' = strsplit(unique(rt_os_sort[, "Histologic_type"]), ' '),
'Stage' = strsplit(unique(rt_os_sort[, "Stage"]), ' '),
'T' = strsplit(unique(rt_os_sort[, "T"]), ' '),
'N' = strsplit(unique(rt_os_sort[, "N"]), ' '),
'M' = strsplit(unique(rt_os_sort[, "M"]), ' '),
'Surgery_of_Primary_Site' = strsplit(unique(rt_os_sort[, "Surgery_of_Primary_Site"]), ' '),
'Surgery_of_Primary_Site_add' = strsplit(unique(rt_os_sort[, "Surgery_of_Primary_Site_add"]), ' '),
'Surgery_of_Other_Site' = strsplit(unique(rt_os_sort[, "Surgery_of_Other_Site"]), ' '),
'Radiation_sequence_with_surgery' = strsplit(unique(rt_os_sort[, "Radiation_sequence_with_surgery"]), ' '),
'Radiation_recode' = strsplit(unique(rt_os_sort[, "Radiation_recode"]), ' '),
'Chemotherapy' = strsplit(unique(rt_os_sort[, "Chemotherapy"]), ' '),
'Regional_nodes_positive_cat' = strsplit(unique(rt_os_sort[, "Regional_nodes_positive_cat"]), ' '),
'mets_bone' = strsplit(unique(rt_os_sort[, "mets_bone"]), ' '),
'mets_brain' = strsplit(unique(rt_os_sort[, "mets_brain"]), ' '),
'mets_liver' = strsplit(unique(rt_os_sort[, "mets_liver"]), ' '),
'mets_lung' = strsplit(unique(rt_os_sort[, "mets_lung"]), ' '),
'mets_Distant_LN' = strsplit(unique(rt_os_sort[, "mets_Distant_LN"]), ' '),
'mets_DX_Other' = strsplit(unique(rt_os_sort[, "mets_DX_Other"]), ' '),
'tumor_size_cat' = strsplit(unique(rt_os_sort[, "tumor_size_cat"]), ' '),
'lymph_nodes_involvement' = strsplit(unique(rt_os_sort[, "lymph_nodes_involvement"]), ' '),
'distant_metastasis' = strsplit(unique(rt_os_sort[, "distant_metastasis"]), ' '),
'lymph_nodes_involvement_clinically' = strsplit(unique(rt_os_sort[, "lymph_nodes_involvement_clinically"]), ' '),
'Race' = strsplit(unique(rt_os_sort[, "Race"]), ' '),
'Age_cat' = strsplit(unique(rt_os_sort[, "Age_cat"]), ' '),
'Insurance' = strsplit(unique(rt_os_sort[, "Insurance"]), ' '),
'Marital_status' = strsplit(unique(rt_os_sort[, "Marital_status"]), ' '))
runApp('~/JS_data/source_tree/project_code/seer/ESCC_project')
runApp('~/JS_data/source_tree/project_code/seer/ESCC_project')
runApp('~/JS_data/source_tree/project_code/seer/ESCC_project')
runApp('~/JS_data/source_tree/project_code/seer/ESCC_project')
runApp('~/JS_data/source_tree/project_code/seer/ESCC_project')
runApp('~/JS_data/source_tree/project_code/seer/ESCC_project')
runApp('~/JS_data/source_tree/project_code/seer/ESCC_project')
runApp('~/JS_data/source_tree/project_code/seer/ESCC_project')
strsplit(unique(rt_os_sort[, "Surgery_of_Primary_Site_add"])
)
strsplit(unique(rt_os_sort[, "Surgery_of_Primary_Site_add"])
strsplit(unique(rt_os_sort[, "Surgery_of_Primary_Site_add"]), ' ')
rt_os_sort$Primary_Site
rt_os_sort$Histologic_type
gsub(' ', '_', rt_os_sort)
rt_os_sort$Surgery_of_Primary_Site
unique(rt_os_sort$Surgery_of_Primary_Site)
unique(rt_os_sort$Surgery_of_Primary_Site_add)
unique(rt_os_sort$Surgery_of_Other_Site)
unique(rt_os_sort$Radiation_sequence_with_surgery)
unique(rt_os_sort$Surgery_of_Other_Site)
unique(rt_os_sort$Radiation_sequence_with_surgery)
unique(rt_os_sort$Chemotherapy)
unique(rt_os_sort$mets_Distant_LN)
unique(rt_os_sort$lymph_nodes_involvement_clinically)
setwd('/Users/stead/JS_data/source_tree/project_code/seer/ESCC_project/data/KM')
rt_os <- read.table(file = '/Users/stead/JS_data/level3_data/SEER/ESCC/OS/OS.txt', header = TRUE, sep = '\t', stringsAsFactors = FALSE)
rt_os_sort <- rt_os[, -c(which(colnames(rt_os) == 'tumor_size'),
which(colnames(rt_os) == 'Age'), which(colnames(rt_os) == 'Patient_ID'),
which(colnames(rt_os) == 'Year'), which(colnames(rt_os) == 'Survival_status'),
which(colnames(rt_os) == 'Regional_nodes_positive'))]
saveRDS(rt_os_sort, file = 'OS_data.rds')
OS_Sublist <- list('all',
'Sex' = strsplit(unique(rt_os_sort[, "Sex"]), ' '),
'State' = strsplit(unique(rt_os_sort[, "State"]), ' '),
'Primary_Site' = strsplit(unique(rt_os_sort[, "Primary_Site"]), ' '),
'Grade' = strsplit(unique(rt_os_sort[, "Grade"]), ' '),
'Histologic_type' = strsplit(unique(rt_os_sort[, "Histologic_type"]), ' '),
'Stage' = strsplit(unique(rt_os_sort[, "Stage"]), ' '),
'T' = strsplit(unique(rt_os_sort[, "T"]), ' '),
'N' = strsplit(unique(rt_os_sort[, "N"]), ' '),
'M' = strsplit(unique(rt_os_sort[, "M"]), ' '),
'Surgery_of_Primary_Site' = strsplit(unique(rt_os_sort[, "Surgery_of_Primary_Site"]), ' '),
'Surgery_of_Other_Site' = strsplit(unique(rt_os_sort[, "Surgery_of_Other_Site"]), ' '),
'Radiation_sequence_with_surgery' = strsplit(unique(rt_os_sort[, "Radiation_sequence_with_surgery"]), ' '),
'Radiation_recode' = strsplit(unique(rt_os_sort[, "Radiation_recode"]), ' '),
'Chemotherapy' = strsplit(unique(rt_os_sort[, "Chemotherapy"]), ' '),
'Regional_nodes_positive_cat' = strsplit(unique(rt_os_sort[, "Regional_nodes_positive_cat"]), ' '),
'mets_bone' = strsplit(unique(rt_os_sort[, "mets_bone"]), ' '),
'mets_brain' = strsplit(unique(rt_os_sort[, "mets_brain"]), ' '),
'mets_liver' = strsplit(unique(rt_os_sort[, "mets_liver"]), ' '),
'mets_lung' = strsplit(unique(rt_os_sort[, "mets_lung"]), ' '),
'mets_Distant_LN' = strsplit(unique(rt_os_sort[, "mets_Distant_LN"]), ' '),
'mets_DX_Other' = strsplit(unique(rt_os_sort[, "mets_DX_Other"]), ' '),
'tumor_size_cat' = strsplit(unique(rt_os_sort[, "tumor_size_cat"]), ' '),
'lymph_nodes_involvement' = strsplit(unique(rt_os_sort[, "lymph_nodes_involvement"]), ' '),
'distant_metastasis' = strsplit(unique(rt_os_sort[, "distant_metastasis"]), ' '),
'lymph_nodes_involvement_clinically' = strsplit(unique(rt_os_sort[, "lymph_nodes_involvement_clinically"]), ' '),
'Race' = strsplit(unique(rt_os_sort[, "Race"]), ' '),
'Age_cat' = strsplit(unique(rt_os_sort[, "Age_cat"]), ' '),
'Insurance' = strsplit(unique(rt_os_sort[, "Insurance"]), ' '),
'Marital_status' = strsplit(unique(rt_os_sort[, "Marital_status"]), ' '))
saveRDS(OS_Sublist, file = 'OS_Sublist.rds')
setwd('/Users/stead/JS_data/source_tree/project_code/seer/ESCC_project/data/KM')
rt_os <- read.table(file = '/Users/stead/JS_data/level3_data/SEER/ESCC/OS/OS.txt', header = TRUE, sep = '\t', stringsAsFactors = FALSE)
setwd('/Users/stead/JS_data/source_tree/project_code/seer/ESCC_project/data/KM')
rt_os <- read.table(file = '/Users/stead/JS_data/level3_data/SEER/ESCC/OS/OS.txt', header = TRUE, sep = '\t', stringsAsFactors = FALSE)
rt_os_sort <- rt_os[, -c(which(colnames(rt_os) == 'tumor_size'),
which(colnames(rt_os) == 'Age'), which(colnames(rt_os) == 'Patient_ID'),
which(colnames(rt_os) == 'Year'), which(colnames(rt_os) == 'Survival_status'),
which(colnames(rt_os) == 'Regional_nodes_positive'))]
saveRDS(rt_os_sort, file = 'OS_data.rds')
OS_Sublist <- list('all',
'Sex' = strsplit(unique(rt_os_sort[, "Sex"]), ' '),
'State' = strsplit(unique(rt_os_sort[, "State"]), ' '),
'Primary_Site' = strsplit(unique(rt_os_sort[, "Primary_Site"]), ' '),
'Grade' = strsplit(unique(rt_os_sort[, "Grade"]), ' '),
'Histologic_type' = strsplit(unique(rt_os_sort[, "Histologic_type"]), ' '),
'Stage' = strsplit(unique(rt_os_sort[, "Stage"]), ' '),
'T' = strsplit(unique(rt_os_sort[, "T"]), ' '),
'N' = strsplit(unique(rt_os_sort[, "N"]), ' '),
'M' = strsplit(unique(rt_os_sort[, "M"]), ' '),
'Surgery_of_Primary_Site' = strsplit(unique(rt_os_sort[, "Surgery_of_Primary_Site"]), ' '),
'Surgery_of_Other_Site' = strsplit(unique(rt_os_sort[, "Surgery_of_Other_Site"]), ' '),
'Radiation_sequence_with_surgery' = strsplit(unique(rt_os_sort[, "Radiation_sequence_with_surgery"]), ' '),
'Radiation_recode' = strsplit(unique(rt_os_sort[, "Radiation_recode"]), ' '),
'Chemotherapy' = strsplit(unique(rt_os_sort[, "Chemotherapy"]), ' '),
'Regional_nodes_positive_cat' = strsplit(unique(rt_os_sort[, "Regional_nodes_positive_cat"]), ' '),
'mets_bone' = strsplit(unique(rt_os_sort[, "mets_bone"]), ' '),
'mets_brain' = strsplit(unique(rt_os_sort[, "mets_brain"]), ' '),
'mets_liver' = strsplit(unique(rt_os_sort[, "mets_liver"]), ' '),
'mets_lung' = strsplit(unique(rt_os_sort[, "mets_lung"]), ' '),
'mets_Distant_LN' = strsplit(unique(rt_os_sort[, "mets_Distant_LN"]), ' '),
'mets_DX_Other' = strsplit(unique(rt_os_sort[, "mets_DX_Other"]), ' '),
'tumor_size_cat' = strsplit(unique(rt_os_sort[, "tumor_size_cat"]), ' '),
'lymph_nodes_involvement' = strsplit(unique(rt_os_sort[, "lymph_nodes_involvement"]), ' '),
'distant_metastasis' = strsplit(unique(rt_os_sort[, "distant_metastasis"]), ' '),
'lymph_nodes_involvement_clinically' = strsplit(unique(rt_os_sort[, "lymph_nodes_involvement_clinically"]), ' '),
'Race' = strsplit(unique(rt_os_sort[, "Race"]), ' '),
'Age_cat' = strsplit(unique(rt_os_sort[, "Age_cat"]), ' '),
'Insurance' = strsplit(unique(rt_os_sort[, "Insurance"]), ' '),
'Marital_status' = strsplit(unique(rt_os_sort[, "Marital_status"]), ' '))
saveRDS(OS_Sublist, file = 'OS_Sublist.rds')
runApp('~/JS_data/source_tree/project_code/seer/ESCC_project')
unique(rt_os_sort$Stage)
runApp('~/JS_data/source_tree/project_code/seer/ESCC_project')
Rt_Exp_Cli[, 'OS_Time']
which([which(Rt_Exp_Cli[, 'Sex'] != 'Unknown'))
which(Rt_Exp_Cli[, 'Sex'] != 'Unknown')
runApp('~/JS_data/source_tree/project_code/seer/ESCC_project')
runApp('~/JS_data/source_tree/project_code/seer/ESCC_project')
setwd('/Users/stead/JS_data/source_tree/project_code/seer/ESCC_project/data/KM')
rt_os <- read.table(file = '/Users/stead/JS_data/level3_data/SEER/ESCC/OS/OS.txt', header = TRUE, sep = '\t', stringsAsFactors = FALSE)
rt_os_sort <- rt_os[, -c(which(colnames(rt_os) == 'tumor_size'),
which(colnames(rt_os) == 'Age'), which(colnames(rt_os) == 'Patient_ID'),
which(colnames(rt_os) == 'Year'), which(colnames(rt_os) == 'Survival_status'),
which(colnames(rt_os) == 'Regional_nodes_positive'))]
colnames(rt_os)
unique(rt_os$Surgery_of_Primary_Site_add)
which(colnames(rt_os) == 'Surgery_of_Primary_Site_add')
setwd('/Users/stead/JS_data/source_tree/project_code/seer/ESCC_project/data/KM')
rt_os <- read.table(file = '/Users/stead/JS_data/level3_data/SEER/ESCC/OS/OS.txt', header = TRUE, sep = '\t', stringsAsFactors = FALSE)
rt_os_sort <- rt_os[, -c(which(colnames(rt_os) == 'tumor_size'),
which(colnames(rt_os) == 'Age'), which(colnames(rt_os) == 'Patient_ID'),
which(colnames(rt_os) == 'Year'), which(colnames(rt_os) == 'Survival_status'),
which(colnames(rt_os) == 'Regional_nodes_positive'), which(colnames(rt_os) == 'Surgery_of_Primary_Site_add')), ]
saveRDS(rt_os_sort, file = 'OS_data.rds')
OS_Sublist <- list('all',
'Sex' = strsplit(unique(rt_os_sort[, "Sex"]), ' '),
'State' = strsplit(unique(rt_os_sort[, "State"]), ' '),
'Primary_Site' = strsplit(unique(rt_os_sort[, "Primary_Site"]), ' '),
'Grade' = strsplit(unique(rt_os_sort[, "Grade"]), ' '),
'Histologic_type' = strsplit(unique(rt_os_sort[, "Histologic_type"]), ' '),
'Stage' = strsplit(unique(rt_os_sort[, "Stage"]), ' '),
'T' = strsplit(unique(rt_os_sort[, "T"]), ' '),
'N' = strsplit(unique(rt_os_sort[, "N"]), ' '),
'M' = strsplit(unique(rt_os_sort[, "M"]), ' '),
'Surgery_of_Primary_Site' = strsplit(unique(rt_os_sort[, "Surgery_of_Primary_Site"]), ' '),
'Surgery_of_Other_Site' = strsplit(unique(rt_os_sort[, "Surgery_of_Other_Site"]), ' '),
'Radiation_sequence_with_surgery' = strsplit(unique(rt_os_sort[, "Radiation_sequence_with_surgery"]), ' '),
'Radiation_recode' = strsplit(unique(rt_os_sort[, "Radiation_recode"]), ' '),
'Chemotherapy' = strsplit(unique(rt_os_sort[, "Chemotherapy"]), ' '),
'Regional_nodes_positive_cat' = strsplit(unique(rt_os_sort[, "Regional_nodes_positive_cat"]), ' '),
'mets_bone' = strsplit(unique(rt_os_sort[, "mets_bone"]), ' '),
'mets_brain' = strsplit(unique(rt_os_sort[, "mets_brain"]), ' '),
'mets_liver' = strsplit(unique(rt_os_sort[, "mets_liver"]), ' '),
'mets_lung' = strsplit(unique(rt_os_sort[, "mets_lung"]), ' '),
'mets_Distant_LN' = strsplit(unique(rt_os_sort[, "mets_Distant_LN"]), ' '),
'mets_DX_Other' = strsplit(unique(rt_os_sort[, "mets_DX_Other"]), ' '),
'tumor_size_cat' = strsplit(unique(rt_os_sort[, "tumor_size_cat"]), ' '),
'lymph_nodes_involvement' = strsplit(unique(rt_os_sort[, "lymph_nodes_involvement"]), ' '),
'distant_metastasis' = strsplit(unique(rt_os_sort[, "distant_metastasis"]), ' '),
'lymph_nodes_involvement_clinically' = strsplit(unique(rt_os_sort[, "lymph_nodes_involvement_clinically"]), ' '),
'Race' = strsplit(unique(rt_os_sort[, "Race"]), ' '),
'Age_cat' = strsplit(unique(rt_os_sort[, "Age_cat"]), ' '),
'Insurance' = strsplit(unique(rt_os_sort[, "Insurance"]), ' '),
'Marital_status' = strsplit(unique(rt_os_sort[, "Marital_status"]), ' '))
saveRDS(OS_Sublist, file = 'OS_Sublist.rds')
source('~/JS_data/source_tree/project_code/seer/SEER_ESCC_data_convert/OS_data.R')
runApp('~/JS_data/source_tree/project_code/seer/ESCC_project')
runApp('~/JS_data/source_tree/project_code/seer/ESCC_project')
setwd('/Users/stead/JS_data/source_tree/project_code/seer/ESCC_project/data/KM')
rt_os <- read.table(file = '/Users/stead/JS_data/level3_data/SEER/ESCC/OS/OS.txt', header = TRUE, sep = '\t', stringsAsFactors = FALSE)
rt_os_sort <- rt_os[, -c(which(colnames(rt_os) == 'tumor_size'),
which(colnames(rt_os) == 'Age'), which(colnames(rt_os) == 'Patient_ID'),
which(colnames(rt_os) == 'Year'), which(colnames(rt_os) == 'Survival_status'),
which(colnames(rt_os) == 'Regional_nodes_positive'), which(colnames(rt_os) == 'Surgery_of_Primary_Site_add')), ]
saveRDS(rt_os_sort, file = 'OS_data.rds')
OS_Sublist <- list('all',
'Sex' = strsplit(unique(rt_os_sort[, "Sex"]), ' '),
'State' = strsplit(unique(rt_os_sort[, "State"]), ' '),
'Primary_Site' = strsplit(unique(rt_os_sort[, "Primary_Site"]), ' '),
'Grade' = strsplit(unique(rt_os_sort[, "Grade"]), ' '),
'Histologic_type' = strsplit(unique(rt_os_sort[, "Histologic_type"]), ' '),
'Stage' = strsplit(unique(rt_os_sort[, "Stage"]), ' '),
'T' = strsplit(unique(rt_os_sort[, "T"]), ' '),
'N' = strsplit(unique(rt_os_sort[, "N"]), ' '),
'M' = strsplit(unique(rt_os_sort[, "M"]), ' '),
'Surgery_of_Primary_Site' = strsplit(unique(rt_os_sort[, "Surgery_of_Primary_Site"]), ' '),
'Surgery_of_Other_Site' = strsplit(unique(rt_os_sort[, "Surgery_of_Other_Site"]), ' '),
'Radiation_sequence_with_surgery' = strsplit(unique(rt_os_sort[, "Radiation_sequence_with_surgery"]), ' '),
'Radiation_recode' = strsplit(unique(rt_os_sort[, "Radiation_recode"]), ' '),
'Chemotherapy' = strsplit(unique(rt_os_sort[, "Chemotherapy"]), ' '),
'Regional_nodes_positive_cat' = strsplit(unique(rt_os_sort[, "Regional_nodes_positive_cat"]), ' '),
'mets_bone' = strsplit(unique(rt_os_sort[, "mets_bone"]), ' '),
'mets_brain' = strsplit(unique(rt_os_sort[, "mets_brain"]), ' '),
'mets_liver' = strsplit(unique(rt_os_sort[, "mets_liver"]), ' '),
'mets_lung' = strsplit(unique(rt_os_sort[, "mets_lung"]), ' '),
'mets_Distant_LN' = strsplit(unique(rt_os_sort[, "mets_Distant_LN"]), ' '),
'mets_DX_Other' = strsplit(unique(rt_os_sort[, "mets_DX_Other"]), ' '),
'tumor_size_cat' = strsplit(unique(rt_os_sort[, "tumor_size_cat"]), ' '),
'lymph_nodes_involvement' = strsplit(unique(rt_os_sort[, "lymph_nodes_involvement"]), ' '),
'distant_metastasis' = strsplit(unique(rt_os_sort[, "distant_metastasis"]), ' '),
'lymph_nodes_involvement_clinically' = strsplit(unique(rt_os_sort[, "lymph_nodes_involvement_clinically"]), ' '),
'Race' = strsplit(unique(rt_os_sort[, "Race"]), ' '),
'Age_cat' = strsplit(unique(rt_os_sort[, "Age_cat"]), ' '),
'Insurance' = strsplit(unique(rt_os_sort[, "Insurance"]), ' '),
'Marital_status' = strsplit(unique(rt_os_sort[, "Marital_status"]), ' '))
saveRDS(OS_Sublist, file = 'OS_Sublist.rds')
getwd()
runApp('~/JS_data/source_tree/project_code/seer/ESCC_project')
runApp('~/JS_data/source_tree/project_code/seer/ESCC_project')
runApp('~/JS_data/source_tree/project_code/seer/ESCC_project')
runApp('~/JS_data/source_tree/project_code/seer/ESCC_project')
runApp('~/JS_data/source_tree/project_code/seer/ESCC_project')
c("red", "blue", "green4", "orange1", "plum3", "gold2", "darkred", "yellow", "pink", "grey")
unique(data_sur_os$State)
length(unique(data_sur_os$State))
length(c("red", "blue", "green4", "orange1", "plum3", "gold2", "darkred", "yellow", "pink", "grey", 'black', 'cyan2', 'darkolivegreen'))
runApp('~/JS_data/source_tree/project_code/seer/ESCC_project')
runApp('~/JS_data/source_tree/project_code/seer/ESCC_project')
color_list
runApp('~/JS_data/source_tree/project_code/seer/ESCC_project')
color_list
runApp('~/JS_data/source_tree/project_code/seer/ESCC_project')
